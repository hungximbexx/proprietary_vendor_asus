#!/system/bin/sh
#########################################################################
#									#
#		ASUS ATD TestCommand Interface for Camera		#
#									#
#########################################################################

TEST_TIMES=-1
INDEX=0
COUNT=50
OPEN_COUNT=12
REC=1
LOG_FILE="/data/.tmp/CameraTest.log"

function disableTouch(){ 
#    echo "Disable touch!!"
    echo a503 > /sys/bus/i2c/devices/5-0038/ftstprwreg # for A91_SR1
}

function enableTouch(){ 
#    echo "Enable touch!!"
    echo 1 > /sys/bus/i2c/devices/5-0038/ftresetic # for A91_SR1
}

#Debug message switch
DEBUG=0

logi () {
  echo "`date` I $@" >> $LOG_FILE
  if [ $DEBUG -eq "1" ]
  then
    echo "`date +%H:%M:%S` I $@"
  fi
}

logd () {
  echo "`date` D $@" >> $LOG_FILE
  if [ $DEBUG -eq "1" ]
  then
    echo "`date +%H:%M:%S` D $@"
  fi
}

loge () {
  echo "`date` E $@" >> $LOG_FILE
  if [ $DEBUG -eq "1" ]
  then
    echo "`date +%H:%M:%S` E $@"
  fi
}

#log success/fail message and show processing result on the consol
#$1:success/fail  $2:return string
my_exit() {
  if [ "$1" == "success" ]
  then
    logi "<== return success(1)"
    ATD_ret="1"
    ret=0
  else
    loge "<### return fail(0)"
    ATD_ret="0"
    ret=1
  fi

  echo $ATD_ret
  exit $ret
}

calibration(){
#	sh /system/bin/dit_cali $1 >> $LOG_FILE
	sh /system/bin/dit_cali $1
	if [ $? = 1 ]; then
		my_exit fail
	else
		my_exit success
	fi
}

get_golden_data(){
#	sh /system/bin/dit_golden $1 >> $LOG_FILE
	sh /system/bin/dit_golden $1
	if [ $? = 1 ]; then
		my_exit fail
	else
		my_exit success
	fi
}

case $1 in
	"0")
		case $2 in
		"0")
		enableTouch;
			#echo "Preparing to close camera(Back camera)...!"
			while [ $INDEX -lt $3 ]
			do
			sh /system/bin/input keyevent 3
			sleep 1
				INDEX=$(($INDEX+1))
				result=`cat /data/.tmp/ATD_START 2> /dev/null`
				if [ $result == '0' ]; then
					#echo "Close camera success!!"
					#setprop com.asus.disableevent 0
					# echo "Enable touch success!!"
					#echo 0 > /data/.tmp/ATD_INFINITY
					#echo "Cancel focus setting!!"
					echo "1"				
					exit 0
				fi
				#sleep 1
			done
			#echo "Close camera failed!!"
			echo "0"
		;;
		"1")
		disableTouch;
			#echo "Preparing to open camera(Back camera)...!"
			rm /data/.tmp/ATD_START    2> /dev/null
            		rm /data/.tmp/ATD_FILE     2> /dev/null
            		rm /data/.tmp/ATD_PICTURE  2> /dev/null
			rm /data/.tmp/ATD_INFINITY 2> /dev/null
			#date '+%M:%S'
			sh /system/bin/am force-stop com.android.camera2 # fix resume mode back keyevent not usable
			sh /system/bin/am start -n com.android.camera2/com.android.camera.CameraLauncher -e commandID 0 >> /dev/null
			sleep 1
			INDEX=$(($INDEX+1))
			result=`cat /data/.tmp/ATD_START 2> /dev/null`
			if [ "$result" == "$REC" ]; then
				sleep 0.5
				echo "1"
				#date '+%M:%S'
				exit 0
			fi
			while [ $INDEX -lt $OPEN_COUNT ]
 			do
			if [ "$INDEX % 4" -eq "0" ]; then
				sh /system/bin/am force-stop com.android.camera2 # fix resume mode back keyevent not usable
				sh /system/bin/am start -n com.android.camera2/com.android.camera.CameraLauncher -e commandID 0 >> /dev/null
			fi
			sleep 1
				INDEX=$(($INDEX+1))
				result=`cat /data/.tmp/ATD_START 2> /dev/null`
				if [ "$result" == "$REC" ]; then
					#echo "Start preview success!!"
					#setprop com.asus.disableevent 1
					# echo "Disable touch success!!"
					#setprop camera.infinity.set 0
					sleep 0.5
					echo "1"
					#date '+%M:%S'
					exit 0
				fi
				#sleep 1
			done
			#echo "Start preview failed!!"
			echo "0"
		;;
		*)
			echo "Invalid argument!!(par2 : onoffID = $2)"
		;;
		esac
	;;
	"1")
		case $2 in
		"0")
		enableTouch;
			#echo "Preparing to close camera(Front camera)...!"
			while [ $INDEX -lt $3 ]
			do
			sh /system/bin/input keyevent 3
			sleep 1
				INDEX=$(($INDEX+1))
				result=`cat /data/.tmp/ATD_START 2> /dev/null`
				if [ $result == '0' ]; then
					#echo "Close camera success!!"
					#setprop com.asus.disableevent 0
					# echo "Enable touch success!!"
					echo "1"					
					exit
				fi
				#sleep 1
			done
			#echo "Close camera failed!!"
			echo "0"
		;;
		"1")
		disableTouch;
			#echo "Preparing to open camera(Front camera)...!"
			rm /data/.tmp/ATD_START    2> /dev/null
            		rm /data/.tmp/ATD_FILE     2> /dev/null
            		rm /data/.tmp/ATD_PICTURE  2> /dev/null
			rm /data/.tmp/ATD_INFINITY 2> /dev/null
			#date '+%M:%S'
			sh /system/bin/am force-stop com.android.camera2 # fix resume mode back keyevent not usable
			sh /system/bin/am start -n com.android.camera2/com.android.camera.CameraLauncher -e commandID 1 >> /dev/null
			sleep 1
			INDEX=$(($INDEX+1))
			result=`cat /data/.tmp/ATD_START 2> /dev/null`
			if [ "$result" == "$REC" ]; then
				sleep 0.5
				echo "1"
				#date '+%M:%S'
				exit
			fi
			while [ $INDEX -lt $OPEN_COUNT ]
			do
			if [ "$INDEX % 4" -eq "0" ]; then
				sh /system/bin/am force-stop com.android.camera2 # fix resume mode back keyevent not usable
				sh /system/bin/am start -n com.android.camera2/com.android.camera.CameraLauncher -e commandID 1 >> /dev/null
			fi
			sleep 1
				INDEX=$(($INDEX+1))
				result=`cat /data/.tmp/ATD_START 2> /dev/null`
				if [ "$result" == "$REC" ]; then
					#echo "Start preview success!!"
					#setprop com.asus.disableevent 1
					# echo "Disable touch success!!"
					sleep 0.5
					echo "1"
					#date '+%M:%S'
					exit
				fi
				#sleep 1
			done
			#echo "Start preview failed!!"
			echo "0"
		;;
		*)
			echo "Invalid argument!!(par2 : onoffID = $2)"
		;;
		esac
	;;
	"2")
		# echo "Preparing to auto focus & take picture...!"
    		echo $2 > /data/.tmp/ATD_FILE
    		echo 0 > /data/.tmp/ATD_PICTURE
		echo 0 > /data/.tmp/ATD_INFINITY
		#date '+%M:%S'
		result=`getprop sys.camera.rotation`
		project=`getprop ro.product.model`
		case $project in
			#ME372CG
			"K00E")
				if [ $result == '1' ]; then
					sh /system/bin/input tap 640 400
				else
					sh /system/bin/input tap 400 640
				fi
				sleep 4
				sh /system/bin/input keyevent 27
				;;
			#PF450CL
			"UNKNOWN")
				echo "now in $project Project!"
				if [ $result == '1' ]; then
					sh /system/bin/input tap 400 240
				else
					sh /system/bin/input tap 240 400
				fi
				sleep 2
				sh /system/bin/input keyevent 27
				;;
			#ME175CG
			"K00Z")
				if [ $result == '1' ]; then
					sh /system/bin/input tap 640 400
				else
					sh /system/bin/input tap 400 640
				fi
				sleep 2
				sh /system/bin/input keyevent 27
				;;
			#PF400CG
			"ASUS_T00E")
				if [ $result == '1' ]; then
					sh /system/bin/input tap 400 240
				else
					sh /system/bin/input tap 240 400
				fi
				sleep 2
				sh /system/bin/input keyevent 27
				;;
			#ZE500CL
			"ASUS_Z00D")
				if [ $result == '1' ]; then
					sh /system/bin/input tap 500 360
				else
					sh /system/bin/input tap 360 500
				fi
				#sleep 1
				sh /system/bin/input keyevent 27
				;;
			#ZE500KL
			"ASUS_Z00ED")
				sh /system/bin/input keyevent 80
				;;
			*)
				sh /system/bin/input keyevent 80
				;;
		esac		
		sleep 0.2

		while [ $INDEX -lt $COUNT ]
		do
			INDEX=$(($INDEX+1))
			if [ "$INDEX % 30" -eq "0" ]; then
				sh /system/bin/input keyevent 80
				sleep 0.2
			fi
			result=`cat /data/.tmp/ATD_PICTURE 2> /dev/null`
			if [ "$result" == "$REC" ]; then
				#echo "Picture taken success!!"
				echo "1"
				#date '+%M:%S'
				exit
			fi
			sleep 0.2
		done
		#echo "Picture taken failed!!"
		echo "0"
	;;

	"3")
		echo "Set focus mode!"
		echo $2 > /data/.tmp/ATD_INFINITY
		sleep 1
		echo "1"
	;;	

	"4")
		# echo "Take picture...!"
    		echo $2 > /data/.tmp/ATD_FILE
    		echo 0 > /data/.tmp/ATD_PICTURE
		
		# sh /system/bin/input keyevent 80
		# sleep 2
		#date '+%M:%S'
		#sh /system/bin/input keyevent 17
		sh /system/bin/input keyevent 27
		sleep 0.2
		while [ $INDEX -lt $COUNT ]
		do
			INDEX=$(($INDEX+1))
			if [ "$INDEX % 30" -eq "0" ]; then
				#sh /system/bin/input keyevent 17
				sh /system/bin/input keyevent 27
				sleep 0.2
			fi
			result=`cat /data/.tmp/ATD_PICTURE 2> /dev/null`
			if [ "$result" == "$REC" ]; then
				#echo "Picture taken success!!"
				echo "1"
				#date '+%M:%S'
				exit
			fi
			sleep 0.2
		done
		
		#echo "Picture taken failed!!"
		echo "0"
	;;

	"5")
    	echo $2 > /data/.tmp/ATD_FILE
    	echo 0 > /data/.tmp/ATD_PICTURE
		
		sh /system/bin/input keyevent 27
		sleep 0.2
		while [ $INDEX -lt $COUNT ]
		do
			INDEX=$(($INDEX+1))
			if [ "$INDEX % 30" -eq "0" ]; then
				sh /system/bin/input keyevent 27
				sleep 0.2
			fi
			result=`cat /data/.tmp/ATD_PICTURE 2> /dev/null`
			if [ "$result" == "$REC" ]; then
				echo "1"
				exit
			fi
			sleep 0.2
		done
		echo "0"
	;;

	"6")
		calibration $2

	;;

	"7")

		get_golden_data $2

	;;

	*)
		echo "Invalid argument!!(par1 : commandID = $1)"
	;;
esac

exit 0
