#!/system/bin/sh

DATADATA="/data/data/"
GC2155_GOLDEN="/gc2155_golden.txt"
GC2155_RESPONSE="/gc2155_response.txt"
GC2155_SHADING="/gc2155_shading.txt"
OV5670_GOLDEN="/ov5670_golden.txt"
OV5670_RESPONSE="/ov5670_response.txt"
OV5670_SHADING="/ov5670_shading.txt"
IMX219_GOLDEN="/imx219_golden.txt"
IMX219_RESPONSE="/imx219_response.txt"
IMX219_SHADING="/imx219_shading.txt"
T4K35_GOLDEN="/t4k35_golden.txt"
T4K35_RESPONSE="/t4k35_response.txt"
T4K35_SHADING="/t4k35_shading.txt"
T4K37_GOLDEN="/t4k37_golden.txt"
T4K37_RESPONSE="/t4k37_response.txt"
T4K37_SHADING="/t4k37_shading.txt"
MN34150_GOLDEN="/mn34150_golden.txt"
MN34150_RESPONSE="/mn34150_response.txt"
MN34150_SHADING="/mn34150_shading.txt"

VCM_MACRO="/vcm_macro.txt"
VCM_MACRO_CAL="/vcm_macro_H.txt"
VCM_30CM="/vcm_30cm.txt"
VCM_50CM="/vcm_50cm.txt"
VCM_INF="/vcm_inf.txt"
VCM_INF_CAL="/vcm_inf_H.txt"
FACTORY_FOLDER="/factory"
DEBUG=0

fail()
{
  if [ $DEBUG -eq 1 ]; then
    echo "FAIL: wrong input Parameter"
  fi

  echo "FAIL"
  exit 0
}

copyfile()
{

  if [ -e $FACTORY_FOLDER$1 ]; then
  	cp $FACTORY_FOLDER$1 $DATADATA$2
	return 0
  else
  	if [ $DEBUG -eq 1 ]; then
    	  echo FAIL: $1 is miss.
  	fi

	#rm -rf "$DATADATA$2"
  	return 1
  fi

}

CopyRearCameraOTPData()
{
    if [ ! -d $DATADATA$1 ]; then
      mkdir "$DATADATA$1"
    fi
	ID=`cat /proc/driver/RearModule`
	case $ID in
		"T4K37") 
			#T4K37
		    copyfile $T4K37_GOLDEN $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			copyfile $T4K37_RESPONSE $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			copyfile $T4K37_SHADING $1
			if [ $? -ne 0 ]; then
				return 1
			fi
		;;
		"T4K35")
			#T4K35
		    copyfile $T4K35_GOLDEN $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			copyfile $T4K35_RESPONSE $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			copyfile $T4K35_SHADING $1
			if [ $? -ne 0 ]; then
				return 1
			fi
		;;
		"IMX219")
			#IMX219
		    copyfile $IMX219_GOLDEN $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			copyfile $IMX219_RESPONSE $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			copyfile $IMX219_SHADING $1
			if [ $? -ne 0 ]; then
				return 1
			fi
		;;
		"MN34150")
			#MN34150
		    copyfile $MN34150_GOLDEN $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			copyfile $MN34150_RESPONSE $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			copyfile $MN34150_SHADING $1
			if [ $? -ne 0 ]; then
				return 1
			fi
		;;
		*)
		echo "Incredible! No Sensor."
		;;
	esac
	copyfile $VCM_MACRO $1
	copyfile $VCM_MACRO_CAL $1
    copyfile $VCM_30CM $1
	copyfile $VCM_50CM $1
    copyfile $VCM_INF $1
	copyfile $VCM_INF_CAL $1

    return 0
}


CopyFrontCameraOTPData()
{
    if [ ! -d $DATADATA$1 ]; then
      mkdir "$DATADATA$1"
    fi
	ID=`cat /proc/driver/FrontModule`
	case $ID in
		"OV5670")
			#OV5670
			copyfile $OV5670_GOLDEN $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			copyfile $OV5670_RESPONSE $1
			if [ $? -ne 0 ]; then
				  return 1
			fi
			copyfile $OV5670_SHADING $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			return 0 
		;;
		"GC2155")
			#GC2155
			copyfile $GC2155_GOLDEN $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			copyfile $GC2155_RESPONSE $1
			if [ $? -ne 0 ]; then
				  return 1
			fi
			copyfile $GC2155_SHADING $1
			if [ $? -ne 0 ]; then
				return 1
			fi
			return 0 
		;;
		*)
		echo "Incredible! No Sensor."
		;;
	esac   
    return 0
}

TarOTPData()
{
    cd $DATADATA && busybox tar -zcf "$1.tar.gz" $1

  if [ ! -e "$DATADATA$1.tar.gz" ]; then
    if [ $DEBUG -eq 1 ]; then
      echo FAIL: "$DATADATA$1.tar.gz" dors not generate.
    fi
    return 1
  fi

    rm -rf "$DATADATA$1"
    return 0
}

if [ $# -eq 3 ]; then
    DEBUG=1
fi

case "$1" in
  "0")
        CopyRearCameraOTPData $2
	if [ $? -eq 0 ]; then
	  TarOTPData $2
	  if [ $? -eq 0 ]; then
    	    echo "PASS"
	  else
    	    echo "FAIL"
	    exit 0
	  fi
	else
    	  echo "FAIL"
	  exit 0
	fi
        exit 0
   ;;

  "1")		
	CopyFrontCameraOTPData $2
	if [ $? -eq 0 ]; then
	  TarOTPData $2
	  if [ $? -eq 0 ]; then
    	    echo "PASS"
	  else
    	    echo "FAIL"
	    exit 0
	  fi
	else
    	  echo "FAIL"
	  exit 0
	fi
        exit 0
    ;;

  *)
  # echo Command ID wrong: 
    fail
    ;;

esac    